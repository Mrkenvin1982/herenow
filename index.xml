<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>herenow</title>
    <link>https://herenow.pw/</link>
    <description>Recent content on herenow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>No rights reserved.</copyright>
    <lastBuildDate>Thu, 01 Sep 2016 15:11:57 -0300</lastBuildDate>
    
	<atom:link href="https://herenow.pw/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Moving Assets from Sprockets to Brunch</title>
      <link>https://herenow.pw/article/moving-from-sprockets-to-brunch/</link>
      <pubDate>Thu, 01 Sep 2016 15:11:57 -0300</pubDate>
      
      <guid>https://herenow.pw/article/moving-from-sprockets-to-brunch/</guid>
      <description>Considerations First of all, this is not a complete migration to Brunch, we are only moving our javascript to Brunch, all other assets, such as stylsheets, images and fonts may will remain in Rails&amp;rsquo; regular asset pipeline. I don&amp;rsquo;t think there are any benefit of moving them to Brunch.
We will also still need Sprockets to digest and build our assets manifest.
Why Brunch If you are reading this article, you are probably already interested in brunch.</description>
    </item>
    
    <item>
      <title>Running Actioncable on Different Domain Without Sharing Cookies</title>
      <link>https://herenow.pw/article/rails-actioncable-on-different-domain/</link>
      <pubDate>Sun, 01 May 2016 00:45:16 -0300</pubDate>
      
      <guid>https://herenow.pw/article/rails-actioncable-on-different-domain/</guid>
      <description>Prelude Rails 5 ActionCable standard setup expects your app to set a user_id signed cookie when you authenticate a user, and connect to the ActionCable server on the same domain, so the browser shares this cookie.
This works great in most cases, since ActionCable and the App (website) run on the same server.
But I run my website on Heroku behind Cloudflare, and it does not accept websocket connections on lower tier plans.</description>
    </item>
    
  </channel>
</rss>